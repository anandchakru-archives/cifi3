#	curl -is -H 'Accept:application/schema+json' http://localhost:9090/repo/profile/app
rest.description.app: Represents the application
rest.description.app.appName: Name of the application

#	curl -is -H 'Accept:application/schema+json' http://localhost:9090/repo/profile/app-scm
rest.description.appScm.signVerifyHeader: Header Key in which the signature is passed. Eg: X-Hub-Signature
rest.description.appScm.scmAppId: Id assigned in github for this repo. Eg: 89962281

#	curl -is -H 'Accept:application/schema+json' http://localhost:9090/repo/profile/app-node
rest.description.appNode.stageDir: Dir where artifacts will be staged before deploying. Eg: /var/www/cifi3/
rest.description.appNode.cluster: Multiple nodes with same cluster name are meant to be in a single cluster.
rest.description.appNode.deployScript: Script to execute to Deploy the fetched artifact.
rest.description.appNode.startScript: Script to execute to Start the node.
rest.description.appNode.shutScript: Script to execute to Shutdown the node.

#	curl -is -H 'Accept:application/schema+json' http://localhost:9090/repo/profile/app-pipe
rest.description.appPipe.botBuildRegex: Regex to macth before invoking the build on a push event. Eg: for push on master branch if would be: refs\/heads\/master

#	curl -is -H 'Accept:application/schema+json' http://localhost:9090/repo/profile/app-history
rest.description.appHistory.commitId: Commit id in scm
rest.description.appHistory.assetUrl: Url of the asset built (points to scm releases), available only after/if build is invoked and status is BUILT.
rest.description.appHistory.assetId: Id of the asset built (used in scm), available only after/if build is invoked and status is BUILT.